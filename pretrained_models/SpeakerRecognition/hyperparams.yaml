# Generated 2021-03-02 from:
# /network/tmp1/ravanelm/speechbrain_github/speechbrain_feb15/recipes/VoxCeleb/SpeakerRec/train/hparams/train_ecapa_tdnn.yaml
# yamllint disable
# ################################
# Model: Speaker identification with ECAPA
# Authors: Hwidong Na & Mirco Ravanelli
# ################################

# Basic parameters
seed: 1986
__set_seed: !apply:torch.manual_seed [1986]
output_folder: D:/python_programs/autoautoextractor/pretrained_models/results/ecapa_augment/1986
save_folder: D:/python_programs/autoautoextractor/pretrained_models/results/ecapa_augment/1986/save
train_log: D:/python_programs/autoautoextractor/pretrained_models/results/ecapa_augment/1986/train_log.txt

# Data files
data_folder: D:/python_programs/autoautoextractor/pretrained_models/voxceleb1/
                           # e.g. /path/to/Voxceleb
train_annotation: D:/python_programs/autoautoextractor/pretrained_models/results/ecapa_augment/1986/save/train.csv
valid_annotation: D:/python_programs/autoautoextractor/pretrained_models/results/ecapa_augment/1986/save/dev.csv

# Use the following links for the official voxceleb splits:
# VoxCeleb1 (cleaned): https://www.robots.ox.ac.uk/~vgg/data/voxceleb/meta/veri_test2.txt
# VoxCeleb1-H (cleaned): https://www.robots.ox.ac.uk/~vgg/data/voxceleb/meta/list_test_hard2.txt
# VoxCeleb1-E (cleaned): https://www.robots.ox.ac.uk/~vgg/data/voxceleb/meta/list_test_all2.txt.
# VoxCeleb1-E and VoxCeleb1-H lists are drawn from the VoxCeleb1 training set.
# Therefore you cannot use any files in VoxCeleb1 for training if you are using these lists for testing.
verification_file: https://www.robots.ox.ac.uk/~vgg/data/voxceleb/meta/veri_test2.txt

skip_prep: false
ckpt_interval_minutes: 15 # save checkpoint every N min

# Training parameters
number_of_epochs: 15
batch_size: 32
lr: 0.001
base_lr: 0.00000001
max_lr: 0.001
step_size: 65000
sample_rate: 16000
sentence_len: 3.0 # seconds
shuffle: true
random_chunk: true

# Feature parameters
n_mels: 80
left_frames: 0
right_frames: 0
deltas: false

# Number of speakers
out_n_neurons: 7205 #1211 for vox1  # 5994 for vox2, 7205 for vox1+vox2

dataloader_options:
  batch_size: 32
  shuffle: true
  num_workers: 2

# Functions
compute_features: &id006 !new:speechbrain.lobes.features.Fbank
  n_mels: 80
  left_frames: 0
  right_frames: 0
  deltas: false

embeddings_model: &id007 !new:speechbrain.lobes.models.ECAPA_TDNN.ECAPA_TDNN
  input_size: 80
  lin_neurons: 192

classifier: &id008 !new:speechbrain.lobes.models.classifiers.Linear
  input_shape: [null, 192]
  num_classes: 7205

mean_var_norm: &id009 !new:speechbrain.processing.features.InputNormalization
  norm_type: sentence
  std_norm: false

# Augmentation pipeline
augment_wavedrop: &id001 !new:speechbrain.lobes.augment.TimeDomainSpecAugment
  prob: 0.5
  aug_start: 0.2
  aug_end: 0.5

augment_speed: &id002 !new:speechbrain.lobes.augment.SpeedPerturb
  orig_freq: 16000
  speeds: [95, 100, 105]

add_rev: &id003 !new:speechbrain.lobes.augment.EnvCorrupt
  openrir_folder: D:/python_programs/autoautoextractor/pretrained_models/voxceleb1/
  openrir_max_noise_len: 3.0    # seconds
  reverb_prob: 1.0
  noise_prob: 0.0
  noise_snr_low: 0
  noise_snr_high: 15
  rir_scale_factor: 1.0

add_noise: &id004 !new:speechbrain.lobes.augment.EnvCorrupt
  openrir_folder: D:/python_programs/autoautoextractor/pretrained_models/voxceleb1/
  openrir_max_noise_len: 3.0    # seconds
  reverb_prob: 0.0
  noise_prob: 1.0
  noise_snr_low: 0
  noise_snr_high: 15
  rir_scale_factor: 1.0

add_rev_noise: &id005 !new:speechbrain.lobes.augment.EnvCorrupt
  openrir_folder: D:/python_programs/autoautoextractor/pretrained_models/voxceleb1/
  openrir_max_noise_len: 3.0    # seconds
  reverb_prob: 1.0
  noise_prob: 1.0
  noise_snr_low: 0
  noise_snr_high: 15
  rir_scale_factor: 1.0

augment_pipeline: [*id001, *id002, *id003, *id004, *id005]
concat_augment: true

modules:
  compute_features: *id006
  augment_wavedrop: *id001
  augment_speed: *id002
  add_rev: *id003
  add_noise: *id004
  add_rev_noise: *id005
  embedding_model: *id007
  classifier: *id008
  mean_var_norm: *id009
compute_cost: !new:speechbrain.nnet.losses.LogSoftmaxWrapper
  loss_fn: !new:speechbrain.nnet.losses.AdditiveAngularMargin
    margin: 0.2
    scale: 30

compute_error: !name:speechbrain.nnet.losses.classification_error

opt_class: !name:torch.optim.Adam
  lr: 0.001
  weight_decay: 0.000002

lr_annealing: !new:speechbrain.nnet.schedulers.CyclicLRScheduler
  base_lr: 0.00000001
  max_lr: 0.001
  step_size: 65000

# Logging + checkpoints
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
  save_file: D:/python_programs/autoautoextractor/pretrained_models/results/ecapa_augment/1986/train_log.txt

error_stats: !name:speechbrain.utils.metric_stats.MetricStats
  metric: !name:speechbrain.nnet.losses.classification_error
    reduction: batch

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
  checkpoints_dir: D:/python_programs/autoautoextractor/pretrained_models/results/ecapa_augment/1986/save
  recoverables:
    embedding_model: *id007
    classifier: *id008
    normalizer: *id009
    counter: *id010
